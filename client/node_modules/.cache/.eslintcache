[{"/Users/jpluncumilla/Documents/Top Projects/mern-submit-form/client/src/index.js":"1","/Users/jpluncumilla/Documents/Top Projects/mern-submit-form/client/src/App.js":"2","/Users/jpluncumilla/Documents/Top Projects/mern-submit-form/client/src/reportWebVitals.js":"3","/Users/jpluncumilla/Documents/Top Projects/mern-submit-form/client/src/components/RegistrationForm.js":"4","/Users/jpluncumilla/Documents/Top Projects/mern-submit-form/client/src/components/RegistrationsDisplay.js":"5"},{"size":500,"mtime":1633923115000,"results":"6","hashOfConfig":"7"},{"size":578,"mtime":1635988207813,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1635986109477,"results":"9","hashOfConfig":"7"},{"size":3336,"mtime":1635987989413,"results":"10","hashOfConfig":"7"},{"size":1034,"mtime":1635991307738,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"18fsppm",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jpluncumilla/Documents/Top Projects/mern-submit-form/client/src/index.js",[],["24","25"],"/Users/jpluncumilla/Documents/Top Projects/mern-submit-form/client/src/App.js",[],"/Users/jpluncumilla/Documents/Top Projects/mern-submit-form/client/src/reportWebVitals.js",[],"/Users/jpluncumilla/Documents/Top Projects/mern-submit-form/client/src/components/RegistrationForm.js",["26","27"],"import React, {Fragment, useState} from 'react';\nimport axios from \"axios\";\nimport Form from 'react-bootstrap/esm/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert'\nimport \"./RegistrationForm.css\";\n\n\nexport const RegistrationForm = () => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        telephone: '',\n        message: ''\n    });\n\n    const { name, email, telephone, message } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value});\n\n    const onSubmit = e => {\n        e.preventDefault();\n        const newRegistration ={\n            name,\n            email,\n            telephone,\n            message\n        };\n\n        try {\n            const config = {\n                headers:{\n                    'Content-Type': 'application/json'\n                }\n            };\n\n            const body = JSON.stringify(newRegistration);\n\n            const res = axios.post('http://localhost:5001/api/registration', body, config);\n            console.log(res.data);\n\n        } catch (err) {\n            console.error(err.response.data);\n        }\n\n         fieldClearance()\n    }\n    const fieldClearance = e => setFormData({ name: \"\", email: \"\", telephone:\"\", message: \"\" });\n    \n    return (\n        <div className=\"Form\">\n            <Form className=\"mainForm\" onSubmit={onSubmit}>\n            <h1>Send a message to your future self!</h1>\n            <Form.Floating className=\"mb-3\">\n                <Form.Control\n                id=\"Name\"\n                type=\"text\"\n                placeholder=\"Name\"\n                name='name' \n                value={name} \n                onChange={onChange} \n                required\n                />\n                <label htmlFor=\"floatingInputCustom\">Name</label>\n            </Form.Floating>\n            \n            <Form.Floating className=\"mb-3\">\n                <Form.Control\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                name='email' \n                value={email} \n                onChange={onChange} \n                required\n                />\n                <label htmlFor=\"floatingPasswordCustom\">Email</label>\n            </Form.Floating>  \n\n            <Form.Floating className=\"mb-3\">\n                <Form.Control\n                id=\"phone\"\n                type=\"phone\"\n                placeholder=\"Phone #\"\n                name='telephone' \n                value={telephone} \n                onChange={onChange}\n                />\n                <label htmlFor=\"floatingPasswordCustom\">Phone</label>\n            </Form.Floating>    \n\n            <Form.Floating className=\"mb-3\">\n                <Form.Control\n                rows={4}\n                id=\"Message\"\n                type=\"text\"\n                placeholder=\"Message\"\n                name='message' \n                value={message} \n                onChange={onChange} \n                required\n                style={{ height: '100px' }}\n                />\n                <label htmlFor=\"floatingPasswordCustom\">Message To Future Self</label>\n            </Form.Floating>\n\n            <Button variant=\"outline-success\" type=\"submit\" value=\"Register\"> Submit your message</Button>\n        </Form>\n        </div>\n    )\n}","/Users/jpluncumilla/Documents/Top Projects/mern-submit-form/client/src/components/RegistrationsDisplay.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":16,"nodeType":"34","messageId":"35","endLine":1,"endColumn":24},{"ruleId":"32","severity":1,"message":"36","line":5,"column":8,"nodeType":"34","messageId":"35","endLine":5,"endColumn":13},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","no-global-assign","no-unsafe-negation"]